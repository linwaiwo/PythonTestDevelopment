# -*- coding: utf-8 -*-
# @Time : 2023/08/03 18:27
# @Author : 另外我
# @File : assignment_operator.py
# @Software: 赋值运算符

"""
赋值运算符是将运算符右侧的数据或表达式的结果，保存到运算符左侧的标识符中
在使用赋值运算符时，运算符右侧可以是任意类型的数据，但左侧必须是一个变量，否则或报错
除了普通的赋值运算符外，赋值运算符还可以和算术运算符组成复合赋值运算符

=               简单的赋值运算符            c = a + b 将a+b的运算结果赋值为c
+=              加法赋值运算符              c += a 等效于c = c + a
-=              减法赋值运算符              c -= a等效于c = c - a
*=              乘法赋值运算符              c *= a等效于c = c * a
/=              除法赋值运算符              c /= a等效于c = c / a
%=              取模赋值运算符              c %= a等效于c = c %/ a
**=             幂赋值运算符                c **= a等效于c = c ** a
//=             取整除赋值运算符            c //= a等效于 c = c // a
"""


def assignment_operator():
    # 普通赋值运算符（=）
    # 将等号左侧的数据保存到等号右侧的变量中

    name = 'Tony'
    sums = 1 + 5

    # 加法赋值运算符（ += ）
    # += 运算符是算术运算符 + 与赋值运算符 = 的组合形式，用来简化计算赋值操作。
    # 表达式会将等号左侧变量中的数据与等号右侧的值进行加法计算，然后将计算结果重新保存到等号左侧的变量中。
    a = 10
    a += 2
    print(a)

    # 减法赋值运算符（ -= ）
    a = 1
    a -= 3
    # 相当于表达式  a = a - 3
    print(a)

    # 乘法赋值运算符（ *= ）
    a = 1
    a *= 20
    # 相当于表达式  a = a * 20
    print(a)

    # 除法赋值运算符（ /= ）
    a = 1
    a /= 3  # 相当于表达式  a = a / 2
    print(a)

    # 取模赋值运算符（ %= ）
    a = 1
    a %= 2  # 相当于表达式  a = a % 2
    print(a)

    #  幂赋值运算符（ **= ）
    a = 2
    a **= 3  # 相当于表达式  a = a ** 2
    print(a)

    # 取整除赋值运算符（ //= ）
    a = 10
    b = 2
    a //= b
    print(a)
    print(type(a))


assignment_operator()
