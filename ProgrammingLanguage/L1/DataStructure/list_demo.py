# -*- coding: utf-8 -*-
# @Time : 2023/12/4 0:56
# @Author : 另外我
# @File : list_demo.py
# @Software: 列表

"""
列表是python中最常用的数据类型之一，它是一种有序、可变、异构的数据集合，可以存储多个不同类型的元素，使用中括号 [ ] 定义。

列表具有以下特点：
有序性：列表中的元素按照添加的顺序进行存储，每个元素都有一个对应的索引，可以通过索引访问和操作列表中的元素。
可变性：列表是可变的，也就是说可以通过索引来修改、删除或插入元素。可以改变列表的长度、内容和顺序。
可存储不同类型的元素：列表中可以同时存储不同类型的数据，例如整数、字符串、浮点数、布尔值等。甚至可以存储其他列表或其他复杂的数据结构。
"""


def list_demo():
    # 获取列表元素个数：len()
    list_1 = [1, 3, 2, 5, 6, 565, 8, 9]
    print(len(list_1))

    # count(value)
    # 在列表中统计参数 value 出现的次数
    list_1 = [1, 2, 3, 3, 3, 6, 4, 3]
    print(list_1.count(3))

    # index(value, start, stop)
    # 在列表中查找参数 value 第一次出现的下标位置，如果给定范围则只在范围内查找，如果查找目标不存在则抛出错误。
    list_1 = [1, 2, 3, 3, 3, 6, 4, 3, 1]
    # 第一个1的下标
    print(list_1.index(1))
    # 从下标5开始查找
    print(list_1.index(1, 5))

    # 增加元素
    # append(value)
    # 向列表最后追加元素
    list_1 = [1, 2, 3, 3, 3, 6, 4, 3, 1]
    list_1.append(23)
    print(list_1)

    # extend(iterable)
    # 将一个可迭代对象的元素依次添加到列表最后
    list_1 = [1, 2, 3, 3, 3, 6, 4, 3, 1]
    list_1.extend('abc')
    print(list_1)

    # insert(index, value)
    # 向列表指定下标位置插入一个元素，原有元素依次后移，如果指定下标超过元素个数，则插入到列表最后。
    list_1 = [1, 2, 3, 3, 3, 6, 4, 3, 1]
    # 再下标2后面添加元素a
    list_1.insert(2, "a")
    print(list_1)
    # 当指定下标超过元素个数时，则插入到列表后面
    list_1 = [1, 2, 3, 3, 3, 6, 4, 3, 1]
    list_1.insert(12, 'a')
    print(list_1)

    # 删除元素
    # del 可以使用del 关键字结合索引来删除指定位置的元素。如果指定的下标不存在则抛出一个错误。
    list_1 = [1, 2, 3, 4]
    # 删除下标0的元素
    del (list_1[0])
    print(list_1)

    # clear()清空列表
    list_1 = [1, 2, 3, 4]
    list_1.clear()
    print(list_1)


list_demo()
